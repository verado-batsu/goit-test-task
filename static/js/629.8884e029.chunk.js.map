{"version":3,"file":"static/js/629.8884e029.chunk.js","mappings":"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","sources":["components/BackButton/BackButton.jsx","components/Filter/Filter.jsx","components/Tweets/Tweets.styled.js","redux/selectors.js","utils/localeStorageApi.js","components/ButtonTweets/ButtonTweets.styled.js","components/ButtonTweets/ButtonTweets.jsx","utils/transformNumberComma.js","components/TweetCard/TweetCard.jsx","components/Tweets/Tweets.jsx","utils/createUserWithoutFollowing.js","pages/TweetsPage.jsx"],"sourcesContent":["import { Button } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport function BackButton() {\r\n    const navigate = useNavigate();\r\n    function handleClick() {\r\n        navigate('/');\r\n    }\r\n    return (\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleClick}>\r\n            {'<'} Back to Home page\r\n        </Button>\r\n    );\r\n}\r\n","import { Button, Menu, MenuItem } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\n\r\nimport { updateFilter } from '../../redux/filteredUsers/usersSlice';\r\nimport { statusFilter } from '../../redux/constants';\r\n\r\nexport default function Filter() {\r\n    const dispatch = useDispatch();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleOpen = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClick = e => {\r\n        dispatch(\r\n            updateFilter(statusFilter[e.target.textContent.toLowerCase()])\r\n        );\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                paddingTop: 10,\r\n            }}\r\n        >\r\n            <Button\r\n                variant=\"contained\"\r\n                id=\"basic-button\"\r\n                aria-controls={open ? 'basic-menu' : undefined}\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleOpen}\r\n                endIcon={<KeyboardArrowDownIcon />}\r\n            >\r\n                Filter\r\n            </Button>\r\n            <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClick}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                <MenuItem onClick={handleClick}>All</MenuItem>\r\n                <MenuItem onClick={handleClick}>Follow</MenuItem>\r\n                <MenuItem onClick={handleClick}>Following</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const UsersList = styled.ul`\r\n\tpadding: 10px 0;\r\n\tmargin-bottom: 20px;\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tgap: 174px;\r\n\t\r\n\tli {\r\n\t\tposition: relative;\r\n\t\tmax-width: 380px;\r\n\t\tbackground: linear-gradient(114.99deg, #471CA9 -0.99%, #5736A3 54.28%, #4B2A99 78.99%);\r\n\t\tbox-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n\t\tborder-radius: 20px;\r\n\t}\r\n\t.goit-logo {\r\n\t\tposition: absolute;\r\n\t\ttop: 20px;\r\n\t\tleft: 20px;\r\n\t}\r\n\t.img-wrapper{\r\n\t\tposition: relative;\r\n\t\tpadding: 28px 36px 18px;\r\n\r\n\t\t&::after{\r\n\t\t\tcontent: '';\r\n\t\t\tdisplay: block;\r\n\t\t\tposition: absolute;\r\n\t\t\tleft: 0;\r\n\t\t\tbottom: -8px;\r\n\t\t\tz-index: 0;\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 8px;\r\n\t\t\tbackground: #EBD8FF;\r\n\t\t\tbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06), inset 0px -1.71846px 3.43693px #AE7BE3, inset 0px 3.43693px 2.5777px #FBF8FF;\r\n\t\t}\r\n\t}\r\n\t\r\n\t.user-avatar{\r\n\t\tposition: absolute;\r\n\t\tz-index: 100;\r\n\t\tleft: 150px;\r\n\t\tbottom: -44px;\r\n\t\tborder-radius: 85.9232px;\r\n\t\tborder: 8px solid #EBD8FF;\r\n\t\tbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06), inset 0px -1.71846px 3.43693px #AE7BE3, inset 0px 3.43693px 2.5777px #FBF8FF;\r\n\t}\r\n\r\n\t.user-info{\r\n\t\tpadding: 62px 36px 36px;\r\n\t\ttext-align: center;\r\n\t\t& p{\r\n\t\t\tmargin: 0;\r\n\t\t\tmargin-bottom: 16px;\r\n\t\t\tfont-family: 'Montserrat', sans-serif;\r\n\t\t\tfont-weight: 500;\r\n\t\t\tfont-size: 20px;\r\n\t\t\tline-height: ${24 / 20};\r\n\t\t\ttext-transform: uppercase;\r\n\t\t\tcolor: #EBD8FF;\r\n\t\t}\r\n\t\t& p:last-of-type {\r\n\t\t\tmargin-bottom: 26px;\r\n\t\t}\r\n\t}\r\n`","import { statusFilter } from \"./constants\";\r\n\r\nexport const selectFilteredUsers = (state) => {\r\n\tswitch (state.users.filter) {\r\n        case statusFilter.follow:\r\n            return state.users.filteredUsers.filter(({ following }) => following === false);\r\n        case statusFilter.following:\r\n            return state.users.filteredUsers.filter(({ following }) => following === true);\r\n        default:\r\n            return state.users.filteredUsers;\r\n    }\r\n}\r\n\r\nexport const selectFilter = (state) => {\r\n\treturn state.users.filter\r\n}","export function getUserStatusFromStorage(user) {\r\n\ttry {\r\n\t\tconst btnStatus = JSON.parse(localStorage.getItem('btnStatus'))?.[user.id] === 'false'\r\n        ? false\r\n\t\t: true;\r\n\t\treturn JSON.parse(localStorage.getItem('btnStatus'))?.[user.id]\r\n            ? btnStatus\r\n            : false;\r\n\t} catch (error) {\r\n\t\tconsole.log(error)\r\n\t}\r\n}\r\n\r\nexport function setUserStatusToStorage(user, status) {\r\n\ttry {\r\n\t\tconst btnStatusStorage = {\r\n                ...JSON.parse(localStorage.getItem('btnStatus')),\r\n                [user.id]: status,\r\n            };\r\n        localStorage.setItem('btnStatus', JSON.stringify(btnStatusStorage));\r\n\t} catch (error) {\r\n\t\tconsole.log(error)\r\n\t}\r\n}\r\n\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n\tborder: none;\r\n\tpadding: 0;\r\n\tpadding: 14px 56px;\r\n\r\n\tbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n\tborder-radius: 10.3108px;\r\n\r\n\tfont-family: 'Montserrat', sans-serif;\r\n\tfont-weight: 600;\r\n\tfont-size: 18px;\r\n\tline-height: ${22 / 18};\r\n\ttext-transform: uppercase;\r\n\tcolor: #373737;\r\n\r\n\t&:hover,\r\n\t&:focus{\r\n\t\topacity: 0.85;\r\n\t}\r\n\r\n\tcursor: pointer;\r\n\t${(props) => {\r\n\t\t\tif (props.btnStatus) {\r\n\t\t\t\treturn `background: #5CD3A8;`\r\n\t\t\t} else {\r\n\t\t\t\treturn 'background: #EBD8FF;'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`","import { useState } from 'react';\r\nimport { Button } from './ButtonTweets.styled';\r\nimport {\r\n    getUserStatusFromStorage,\r\n    setUserStatusToStorage,\r\n} from '../../utils/localeStorageApi';\r\n\r\nexport function ButtonTweets({ getBtnStatus, user, updateLoading }) {\r\n    const [btnStatus, setBtnStatus] = useState(() => {\r\n        return getUserStatusFromStorage(user);\r\n    });\r\n\r\n    function handleClick() {\r\n        setBtnStatus(prevState => {\r\n            setUserStatusToStorage(user, !prevState);\r\n            getBtnStatus(user, !prevState);\r\n            return !prevState;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            btnStatus={btnStatus}\r\n            onClick={handleClick}\r\n            type=\"button\"\r\n            disabled={updateLoading}\r\n        >\r\n            {btnStatus ? 'Following' : 'Follow'}\r\n        </Button>\r\n    );\r\n}\r\n","export function transformNumberComma(number) {\r\n\tconst stringNumber = number.toString();\r\n\tif (stringNumber.length > 3) {\r\n\t\tconst endString = stringNumber.slice(stringNumber.length - 3)\r\n\t\tconst startString = transformNumberComma(stringNumber.slice(0, stringNumber.length - 3))\r\n\t\treturn `${startString},${endString}`\r\n\t} else {\r\n\t\treturn stringNumber;\r\n\t}\r\n}","import { ButtonTweets } from '../ButtonTweets/ButtonTweets';\r\nimport { transformNumberComma } from '../../utils/transformNumberComma';\r\nimport GoitLogo from '../../assets/images/goit-logo.png';\r\nimport CardBg from '../../assets/images/card-bg.png';\r\n\r\nexport function TweetCard({ user, getBtnStatus, updateLoading }) {\r\n    const { user: name, tweets, avatar, followers } = user;\r\n    return (\r\n        <li>\r\n            <img className=\"goit-logo\" src={GoitLogo} alt=\"GoIT logo\" />\r\n            <div className=\"img-wrapper\">\r\n                <img src={CardBg} alt=\"card background\" />\r\n                <img\r\n                    width=\"62\"\r\n                    height=\"62\"\r\n                    className=\"user-avatar\"\r\n                    src={avatar}\r\n                    alt={name}\r\n                />\r\n            </div>\r\n            <div className=\"user-info\">\r\n                <p>\r\n                    {`${transformNumberComma(tweets)} `}\r\n                    tweets\r\n                </p>\r\n                <p>\r\n                    {`${transformNumberComma(followers)} `}\r\n                    followers\r\n                </p>\r\n                <ButtonTweets\r\n                    updateLoading={updateLoading}\r\n                    getBtnStatus={getBtnStatus}\r\n                    user={user}\r\n                />\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n","import { Box, Button, CircularProgress, Typography } from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\r\n\r\nimport {\r\n    useGetUsersQuery,\r\n    useUpdateUserMutation,\r\n} from '../../services/usersApi';\r\nimport { UsersList } from './Tweets.styled';\r\n\r\nimport {\r\n    addUsers,\r\n    updateFilteredUsers,\r\n} from '../../redux/filteredUsers/usersSlice';\r\nimport { selectFilter, selectFilteredUsers } from '../../redux/selectors';\r\nimport { getUserStatusFromStorage } from '../../utils/localeStorageApi';\r\nimport { TweetCard } from '../TweetCard/TweetCard';\r\nimport { createUserWithoutFollowing } from '../../utils/createUserWithoutFollowing';\r\n\r\nexport function Tweets() {\r\n    const dispatch = useDispatch();\r\n\r\n    const filteredUsers = useSelector(selectFilteredUsers);\r\n    const [page, setPage] = useState(() => {\r\n        const page = filteredUsers.length / 3;\r\n        return page === 0 ? page + 1 : page;\r\n    });\r\n\r\n    const { data, error, isFetching } = useGetUsersQuery(page);\r\n    const [updateUser, { error: updateError, isLoading: updateLoading }] =\r\n        useUpdateUserMutation();\r\n\r\n    const filter = useSelector(selectFilter);\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            const users = data.map(user => {\r\n                return {\r\n                    ...user,\r\n                    following: getUserStatusFromStorage(user),\r\n                };\r\n            });\r\n            dispatch(addUsers(users));\r\n        }\r\n    }, [data, dispatch]);\r\n\r\n    function getBtnStatus(user, btnStatus) {\r\n        const newUser = createUserWithoutFollowing(user);\r\n        if (btnStatus) {\r\n            const followers = newUser.followers + 1;\r\n            updateUser({ ...newUser, followers });\r\n            dispatch(\r\n                updateFilteredUsers({\r\n                    id: newUser.id,\r\n                    status: btnStatus,\r\n                    followers,\r\n                })\r\n            );\r\n        } else {\r\n            const followers = newUser.followers - 1;\r\n            updateUser({ ...newUser, followers });\r\n            dispatch(\r\n                updateFilteredUsers({\r\n                    id: newUser.id,\r\n                    status: btnStatus,\r\n                    followers,\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    function handleClick() {\r\n        setPage(prev => {\r\n            return prev + 1;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {error && Notify.failure(`Code: ${error.status} ${error.data}`)}\r\n            {updateError && Notify.failure(updateError.error)}\r\n            {isFetching && !data && (\r\n                <Box\r\n                    sx={{\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    <CircularProgress />\r\n                </Box>\r\n            )}\r\n            {filteredUsers.length === 0 && !isFetching && !error && (\r\n                <Typography\r\n                    sx={{\r\n                        textAlign: 'center',\r\n                    }}\r\n                    variant=\"h4\"\r\n                    component=\"p\"\r\n                >\r\n                    No tweets with filter \"{filter}\"\r\n                </Typography>\r\n            )}\r\n            <UsersList>\r\n                {filteredUsers &&\r\n                    filteredUsers.map(user => {\r\n                        return (\r\n                            <TweetCard\r\n                                key={user.id}\r\n                                user={user}\r\n                                getBtnStatus={getBtnStatus}\r\n                                updateLoading={updateLoading}\r\n                            />\r\n                        );\r\n                    })}\r\n            </UsersList>\r\n            {!error && filter === 'ALL' && (\r\n                <Box\r\n                    sx={{\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        onClick={handleClick}\r\n                        disabled={page >= 4 || isFetching}\r\n                    >\r\n                        {isFetching ? 'Loading' : 'Load More'}\r\n                    </Button>\r\n                </Box>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","export function createUserWithoutFollowing(user) {\r\n\treturn {\r\n\t\tid: user.id,\r\n\t\tuser: user.user,\r\n\t\ttweets: user.tweets,\r\n\t\tavatar: user.avatar,\r\n\t\tfollowers: user.followers,\r\n\t};\r\n}","import { BackButton } from '../components/BackButton/BackButton';\r\nimport Filter from '../components/Filter/Filter';\r\nimport { Tweets } from '../components/Tweets/Tweets';\r\n\r\nexport default function TweetsPage() {\r\n    return (\r\n        <>\r\n            <BackButton />\r\n            <Filter />\r\n            <Tweets />\r\n        </>\r\n    );\r\n}\r\n"],"names":["BackButton","navigate","useNavigate","_jsxs","Button","variant","color","onClick","children","Filter","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","anchorEl","setAnchorEl","open","Boolean","handleClick","e","updateFilter","statusFilter","target","textContent","toLowerCase","style","paddingTop","_jsx","id","undefined","event","currentTarget","endIcon","KeyboardArrowDownIcon","Menu","onClose","MenuListProps","MenuItem","UsersList","styled","_templateObject","_taggedTemplateLiteral","selectFilteredUsers","state","users","filter","filteredUsers","_ref","following","_ref2","selectFilter","getUserStatusFromStorage","user","_JSON$parse","_JSON$parse2","btnStatus","JSON","parse","localStorage","getItem","error","console","log","props","ButtonTweets","getBtnStatus","updateLoading","setBtnStatus","prevState","status","btnStatusStorage","_objectSpread","_defineProperty","setItem","stringify","setUserStatusToStorage","type","disabled","transformNumberComma","number","stringNumber","toString","length","endString","slice","startString","concat","TweetCard","name","tweets","avatar","followers","className","src","GoitLogo","alt","CardBg","width","height","Tweets","useSelector","page","setPage","_useGetUsersQuery","useGetUsersQuery","data","isFetching","_useUpdateUserMutatio","useUpdateUserMutation","_useUpdateUserMutatio2","updateUser","_useUpdateUserMutatio3","updateError","isLoading","newUser","createUserWithoutFollowing","updateFilteredUsers","useEffect","map","addUsers","_Fragment","Notify","Box","sx","textAlign","CircularProgress","Typography","component","size","prev","TweetsPage"],"sourceRoot":""}